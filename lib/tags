BBSHOME	dl_lib.c	14;"	d	file:
DL_ALLOC_MIN	dl_lib.c	25;"	d	file:
DL_func	dl_lib.c	/^DL_func(va_alist)$/;"	f
DL_get	dl_lib.c	/^DL_get(name)$/;"	f
DL_list	dl_lib.c	/^}DL_list;$/;"	t	typeref:struct:__anon1	file:
HDR	Makefile	/^HDR =	dao.h dao.p$/;"	m
MAX	../include/bbs.h	/^      #define	MAX(a,b)	((a>b)?a:b)$/
MIN	../include/bbs.h	/^      #define	MIN(a,b)	((a<b)?a:b)$/
OBJ	Makefile	/^OBJ =	\\$/;"	m
SRC	Makefile	/^SRC =	\\$/;"	m
STRICT_FQDN_EMAIL	not_addr.c	1;"	d	file:
STR_PAT	str_pat.c	/^#define	STR_PAT(x, y)	printf("<%s, %s> : %d\\n", x,/
SplayNode	splay.h	/^typedef struct SplayNode$/;"	s
SplayNode	splay.h	/^}         SplayNode;$/;"	t	typeref:struct:SplayNode
_SPLAY_H_	splay.h	2;"	d
data	splay.h	/^  void *data;$/;"	m	struct:SplayNode
dl_head	dl_lib.c	/^int dl_size, dl_head; $/;"	v
dl_pool	dl_lib.c	/^DL_list  *dl_pool;$/;"	v
dl_size	dl_lib.c	/^int dl_size, dl_head; $/;"	v
dns_addr	dns_addr.c	/^dns_addr(name)$/;"	f
dns_init	dns.c	/^dns_init()$/;"	f
dns_query	dns.c	/^dns_query(name, qtype, ans)$/;"	f
handle	dl_lib.c	/^  void *handle;$/;"	m	struct:__anon1	file:
is_fname	is_fname.c	/^is_fname(str)$/;"	f
left	splay.h	/^  struct SplayNode *left;$/;"	m	struct:SplayNode	typeref:struct:SplayNode::SplayNode
log_dl	dl_lib.c	/^log_dl(mode, msg)$/;"	f
min	xsort.c	/^#define min(a, b)	(a) < (b) ? a : b$/
not_addr	not_addr.c	/^not_addr(addr)$/;"	f
path	dl_lib.c	/^  char *path;$/;"	m	struct:__anon1	file:
right	splay.h	/^  struct SplayNode *right;$/;"	m	struct:SplayNode	typeref:struct:SplayNode::SplayNode
str_rle	str_rle.c	/^str_rle(str)			\/* run-length encoding *\/$/
str_trim	str_trim.c	/^str_trim(buf)			\/* remove trailing space *\/$/
swap	xsort.c	/^#define swap(a, b)					\\$/
swapcode	xsort.c	/^#define swapcode(TYPE, parmi, parmj, n) { 		\\$/
vecswap	xsort.c	/^#define vecswap(a, b, n) 	if ((n) > 0) swapfunc(a,/
